version: '3.9'

services:
  web:
    build: .
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy
      owasp_zap:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py loaddata cve.json &&
      python manage.py runserver 0.0.0.0:8000
      "

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    depends_on:
      web:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - .:/app
    command: celery -A web_scanner worker --loglevel=info  # ðŸ‘ˆ Starts Celery worker

  owasp_zap:
    image: zaproxy/zap-stable
    command: zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.key=${ZAP_API_KEY}
    ports:
      - "8090:8090"
    env_file:
      - .env
